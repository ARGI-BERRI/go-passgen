# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        GOOS: ["linux", "windows"]
        GOARCH: ["amd64", "386"]
        include:
          - GOOS: windows
            EXT: .exe

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"

      - name: Download Go modules
        shell: bash
        if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
        run: go mod download

      - name: Build
        shell: bash
        run: |
          mkdir -p output
          go build -o output/go-passgen-$GOOS-$GOARCH$EXT -v ./cmd/go-passgen
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          EXT: ${{ matrix.EXT }}

      - name: Test
        run: go test -v ./...

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: go-passgen-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ matrix.EXT }}
          path: output/go-passgen-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ matrix.EXT }}